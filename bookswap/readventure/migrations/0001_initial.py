# Generated by Django 4.2.7 on 2024-01-04 09:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('student_id', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(default='N/A', max_length=30)),
                ('last_name', models.CharField(default='N/A', max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('contact_no', models.CharField(default='N/A', max_length=15)),
                ('admin', models.BooleanField(default=False)),
                ('regular', models.BooleanField(default=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('book_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(default='N/A', max_length=100)),
                ('author', models.CharField(default='N/A', max_length=30)),
                ('isbn', models.CharField(default='N/A', max_length=20)),
                ('genre', models.CharField(default='N/A', max_length=30)),
                ('category', models.CharField(default='N/A', max_length=30)),
                ('cover_photo', models.ImageField(default='images/default.jpg', upload_to='images/')),
                ('language', models.CharField(default='N/A', max_length=30)),
                ('condition', models.CharField(default='N/A', max_length=30)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('book', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='availability_relation', serialize=False, to='readventure.books')),
                ('status', models.CharField(default='Available', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borrower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borrowed_books', to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplied_books', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('receipt_no', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('review', models.TextField(blank=True, max_length=255)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('book', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='readventure.books')),
                ('borrower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lends',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.ManyToManyField(to='readventure.books')),
                ('student', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Borrows',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.ManyToManyField(to='readventure.books')),
                ('student', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='books',
            name='ratings',
            field=models.ManyToManyField(related_name='books_ratings', to='readventure.receipt'),
        ),
        migrations.AddField(
            model_name='books',
            name='receipt_numbers',
            field=models.ManyToManyField(related_name='books_receipt_numbers', to='readventure.receipt'),
        ),
        migrations.AddField(
            model_name='books',
            name='reviews',
            field=models.ManyToManyField(related_name='books_reviews', to='readventure.receipt'),
        ),
        migrations.AddField(
            model_name='user',
            name='booklist',
            field=models.ManyToManyField(related_name='user_books', to='readventure.books'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='user',
            name='wishlist',
            field=models.ManyToManyField(related_name='user_wishlist', to='readventure.books'),
        ),
    ]
