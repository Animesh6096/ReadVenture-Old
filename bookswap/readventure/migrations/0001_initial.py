# Generated by Django 4.2.7 on 2024-01-25 06:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('student_id', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(default='N/A', max_length=30)),
                ('last_name', models.CharField(default='N/A', max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('contact_no', models.CharField(default='N/A', max_length=15, unique=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('admin', models.BooleanField(default=False)),
                ('regular', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('book_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(default='N/A', max_length=100)),
                ('author', models.CharField(default='N/A', max_length=30)),
                ('isbn', models.CharField(default='N/A', max_length=20)),
                ('genre', models.CharField(default='N/A', max_length=30)),
                ('category', models.CharField(default='N/A', max_length=30)),
                ('cover_photo', models.ImageField(default='images/default.jpg', upload_to='images/')),
                ('language', models.CharField(default='N/A', max_length=30)),
                ('condition', models.CharField(default='N/A', max_length=30)),
                ('status', models.CharField(default='Available', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Exchange_info',
            fields=[
                ('exchange_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('due_date', models.DateField()),
                ('return_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(default='Pending', max_length=30)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readventure.books')),
                ('borrower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borrower', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='books',
            name='exchange_ids',
            field=models.ManyToManyField(related_name='books_receipt_numbers', to='readventure.exchange_info'),
        ),
        migrations.AddField(
            model_name='books',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='books',
            name='ratings',
            field=models.ManyToManyField(related_name='books_ratings', to='readventure.exchange_info'),
        ),
        migrations.AddField(
            model_name='books',
            name='reviews',
            field=models.ManyToManyField(related_name='books_reviews', to='readventure.exchange_info'),
        ),
        migrations.AddField(
            model_name='user',
            name='wishlist',
            field=models.ManyToManyField(related_name='user_wishlist', to='readventure.books'),
        ),
    ]
